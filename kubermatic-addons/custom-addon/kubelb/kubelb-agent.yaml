apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: agent
  name: kubelb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
  namespace: kubelb
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: agent-role
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
  namespace: kubelb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kubelb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kubelb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxy-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: kubelb
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: agent
  name: agent-metrics-service
  namespace: kubelb
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    control-plane: agent
---
apiVersion: v1
kind: Secret
metadata:
  name: kubelb
  namespace: kubelb
type: Opaque
data:
  kubelb: "{{ .Variables.kubeconf }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: agent
  name: agent
  namespace: kubelb
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: agent
  template:
    metadata:
      labels:
        control-plane: agent
    spec:
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        - args:
            - --cluster-name={{ .Variables.clustername}}
          command:
            - /agent
          image: quay.io/weirdmachine/kubelb-agent:latest
          imagePullPolicy: Always
          name: agent
          resources:
            limits:
              cpu: 100m
              memory: 30Mi
            requests:
              cpu: 100m
              memory: 20Mi
          volumeMounts:
            - mountPath: /home/nonroot/.kube/
              name: kubelb
              readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
        - name: kubelb
          secret:
            secretName: kubelb
