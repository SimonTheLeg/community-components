apiVersion: org.eclipse.che/v1
kind: CheCluster
metadata:
  name: eclipse-che
  namespace: eclipse-che
spec:
  auth:
    # Public URL of the Identity Provider server (Keycloak / DEX).
    identityProviderURL: {{ .Values.auth.identityProviderURL }}
    # Name of the Kubernetes `OAuthClient` resource used to setup identity federation on the Kubernetes side. Should match to the client id used in DEX. 
    oAuthClientName: {{ .Values.auth.oAuthClientName }}
    # Name of the Kubernetes `OAuthClientSecret` resource used to setup identity federation on the Kubernetes side. Should match to the client secret used in DEX. 
    oAuthSecret: {{ .Values.auth.oAuthSecret }}
  database:
    # Instructs the Operator on whether to deploy a dedicated database.
    # By default, a dedicated PostgreSQL database is deployed as part of the Che installation. When `externalDb` is `true`, no dedicated database will be deployed by the
    # Operator and you will need to provide connection details to the external DB you are about to use. See also all the fields starting with: `chePostgres`.
    externalDb: false
  devWorkspace:
    # Deploys the DevWorkspace Operator in the cluster.
    # Does nothing when a matching version of the Operator is already installed.
    # Fails when a non-matching version of the Operator is already installed.
    enable: true
  k8s:
    # Ingress class that will define the which controller will manage ingresses. Defaults to `nginx`.
    # NB: This drives the `kubernetes.io/ingress.class` annotation on Che-related ingresses.
    ingressClass: "nginx"
    # Global ingress domain for a Kubernetes cluster.
    ingressDomain: {{ .Values.k8s.ingressDomain }}
    # Name of a secret that will be used to setup ingress TLS termination when TLS is enabled.
    # When the field is empty string, the default cluster certificate will be used.
    tlsSecretName: che-tls
  metrics:
    # Enables `metrics` the Che server endpoint.
    enable: true
  server:
    # Advanced configuration properties for CHE Server
    customCheProperties:
      CHE_OIDC_USERNAME__CLAIM: preferred_username
    # When enabled, the certificate from `che-git-self-signed-cert` ConfigMap will be propagated to the Che components and provide particular configuration for Git.
    gitSelfSignedCert: false
    # Defines Kubernetes default namespace in which user's workspaces are created for a case when a user does not override it.
    # It's possible to use `<username>`, `<userid>` and `<workspaceid>` placeholders, such as che-workspace-<username>.
    # In that case, a new namespace will be created for each user or workspace.
    workspaceNamespaceDefault: che-workspace-<username>
  storage:
    # Instructs the Che server to start a special Pod to pre-create a sub-path in the Persistent Volumes.
    preCreateSubPaths: true
    # Size of the persistent volume claim for workspaces.
    pvcClaimSize: 10Gi
    # Persistent volume claim strategy for the Che server. This Can be:`common` (all workspaces PVCs in one volume),
    # `per-workspace` (one PVC per workspace for all declared volumes) and `unique` (one PVC per declared volume).
    pvcStrategy: common
